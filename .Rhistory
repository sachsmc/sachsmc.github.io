sched$What[sched$Time == 8 & Day == "Tuesday"] <- "Meetings"
sched$Y <- Y[as.character(sched$Time)]
ggplot(sched, aes(x = Day, y = Y, fill = What)) + geom_tile() + theme_bw() +
scale_y_continuous("Time", breaks = Y + .5, labels = Time) + scale_fill_viridis(discrete = TRUE)
sched$What[sched$Time == 8 & Day == "Tuesday"]
Time <- seq(8, 17, by = 1)
Y <- -Time + 17
names(Y) <- Time
Day <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
sched <- expand.grid(Time, Day)
colnames(sched) <- c("Time", "Day")
sched$What <- ""
sched$What[sched$Time == 12] <- "Lunch"
sched$What[sched$Time < 12 & sched$Day != "Tuesday"] <- "Coding"
sched$What[sched$Time %in% c(13, 14)] <- "Teaching prep"
sched$What[sched$Time == 8 & sched$Day == "Tuesday"] <- "Meetings"
sched$Y <- Y[as.character(sched$Time)]
ggplot(sched, aes(x = Day, y = Y, fill = What)) + geom_tile() + theme_bw() +
scale_y_continuous("Time", breaks = Y + .5, labels = Time) + scale_fill_viridis(discrete = TRUE)
Time <- seq(8, 17, by = 1)
Y <- -Time + 17
names(Y) <- Time
Day <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
sched <- expand.grid(Time, Day)
colnames(sched) <- c("Time", "Day")
sched$What <- ""
sched$What[sched$Time == 12] <- "Lunch"
sched$What[sched$Time < 12 & sched$Day != "Tuesday"] <- "Coding"
sched$What[sched$Time %in% c(13, 14)] <- "Teaching prep"
sched$What[sched$Time %in% 8:9 & sched$Day == "Tuesday"] <- "Meetings"
sched$Y <- Y[as.character(sched$Time)]
ggplot(sched, aes(x = Day, y = Y, fill = What)) + geom_tile() + theme_bw() +
scale_y_continuous("Time", breaks = Y + .5, labels = Time) + scale_fill_viridis(discrete = TRUE)
Time <- seq(8, 17, by = 1)
Y <- -Time + 17
names(Y) <- Time
Day <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
sched <- expand.grid(Time, Day)
colnames(sched) <- c("Time", "Day")
sched$What <- ""
sched$What[sched$Time == 12] <- "Lunch"
sched$What[sched$Time < 12 & sched$Day != "Tuesday"] <- "Coding"
sched$What[sched$Time %in% c(13, 14)] <- "Teaching prep"
sched$What[sched$Time %in% 8:9 & sched$Day == "Tuesday"] <- "Meetings"
sched$Y <- Y[as.character(sched$Time)]
ggplot(sched, aes(x = Day, y = Y, fill = What)) + geom_tile() + theme_bw() +
scale_y_continuous("Time", breaks = Y + .5, labels = Time) + scale_fill_viridis(discrete = TRUE) +
theme(legend.location = "bottom")
Time <- seq(8, 17, by = 1)
Y <- -Time + 17
names(Y) <- Time
Day <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
sched <- expand.grid(Time, Day)
colnames(sched) <- c("Time", "Day")
sched$What <- ""
sched$What[sched$Time == 12] <- "Lunch"
sched$What[sched$Time < 12 & sched$Day != "Tuesday"] <- "Coding"
sched$What[sched$Time %in% c(13, 14)] <- "Teaching prep"
sched$What[sched$Time %in% 8:9 & sched$Day == "Tuesday"] <- "Meetings"
sched$Y <- Y[as.character(sched$Time)]
ggplot(sched, aes(x = Day, y = Y, fill = What)) + geom_tile() + theme_bw() +
scale_y_continuous("Time", breaks = Y + .5, labels = Time) + scale_fill_viridis(discrete = TRUE) +
theme(legend.position = "bottom")
Time <- seq(8, 17, by = 1)
Y <- -Time + 17
names(Y) <- Time
Day <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
sched <- expand.grid(Time, Day)
colnames(sched) <- c("Time", "Day")
sched$What <- ""
sched$What[sched$Time == 12] <- "Lunch"
sched$What[sched$Time < 12 & !sched$Day %in% c("Tuesday", "Thursday")] <- "Coding"
sched$What[sched$Time %in% c(13, 14)] <- "Teaching prep"
sched$What[sched$Time %in% 8:9 & sched$Day == "Tuesday"] <- "Meetings"
sched$What[sched$Time %in% 10:12 & sched$Day == "Tuesday"] <- "Admin"
sched$What[sched$Time < 12 & sched$Day %in% c("Thursday")] <- "Writing"
sched$What[sched$Time > 15 & sched$Day %in% c("Monday", "Wednesday", "Friday")] <- "Writing"
sched$Y <- Y[as.character(sched$Time)]
ggplot(sched, aes(x = Day, y = Y, fill = What)) + geom_tile() + theme_bw() +
scale_y_continuous("Time", breaks = Y + .5, labels = Time) + scale_fill_viridis(discrete = TRUE) +
theme(legend.position = "bottom")
Time <- seq(8, 17, by = 1)
Y <- -Time + 17
names(Y) <- Time
Day <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
sched <- expand.grid(Time, Day)
colnames(sched) <- c("Time", "Day")
sched$What <- ""
sched$What[sched$Time == 12] <- "Lunch"
sched$What[sched$Time < 12 & !sched$Day %in% c("Tuesday", "Thursday")] <- "Coding"
sched$What[sched$Time %in% c(13, 14)] <- "Teaching prep"
sched$What[sched$Time %in% 8:9 & sched$Day == "Tuesday"] <- "Meetings"
sched$What[sched$Time %in% 10:12 & sched$Day == "Tuesday"] <- "Admin"
sched$What[sched$Time < 12 & sched$Day %in% c("Thursday")] <- "Writing"
sched$What[sched$Time >= 15 & sched$Day %in% c("Monday", "Wednesday", "Friday")] <- "Writing"
sched$What[sched$Time >= 15 & sched$Day %in% c("Tuesday", "Thursday")] <- "Meetings"
sched$Y <- Y[as.character(sched$Time)]
ggplot(sched, aes(x = Day, y = Y, fill = What)) + geom_tile() + theme_bw() +
scale_y_continuous("Time", breaks = Y + .5, labels = Time) + scale_fill_viridis(discrete = TRUE) +
theme(legend.position = "bottom")
Time <- seq(8, 17, by = 1)
Y <- -Time + 17
names(Y) <- Time
Day <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
sched <- expand.grid(Time, Day)
colnames(sched) <- c("Time", "Day")
sched$What <- ""
sched$What[sched$Time == 12] <- "Lunch"
sched$What[sched$Time < 12 & !sched$Day %in% c("Tuesday", "Thursday")] <- "Coding"
sched$What[sched$Time %in% c(13, 14)] <- "Teaching prep"
sched$What[sched$Time %in% 8:9 & sched$Day == "Tuesday"] <- "Meetings"
sched$What[sched$Time %in% 10:11 & sched$Day == "Tuesday"] <- "Admin"
sched$What[sched$Time < 12 & sched$Day %in% c("Thursday")] <- "Writing"
sched$What[sched$Time >= 15 & sched$Day %in% c("Monday", "Wednesday", "Friday")] <- "Writing"
sched$What[sched$Time >= 15 & sched$Day %in% c("Tuesday", "Thursday")] <- "Meetings"
sched$Y <- Y[as.character(sched$Time)]
ggplot(sched, aes(x = Day, y = Y, fill = What)) + geom_tile() + theme_bw() +
scale_y_continuous("Time", breaks = Y + .5, labels = Time) + scale_fill_viridis(discrete = TRUE) +
theme(legend.position = "bottom")
?scale_color_brewer
Time <- seq(8, 17, by = 1)
Y <- -Time + 17
names(Y) <- Time
Day <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
sched <- expand.grid(Time, Day)
colnames(sched) <- c("Time", "Day")
sched$What <- ""
sched$What[sched$Time == 12] <- "Lunch"
sched$What[sched$Time < 12 & !sched$Day %in% c("Tuesday", "Thursday")] <- "Coding"
sched$What[sched$Time %in% c(13, 14)] <- "Teaching prep"
sched$What[sched$Time %in% 8:9 & sched$Day == "Tuesday"] <- "Meetings"
sched$What[sched$Time %in% 10:11 & sched$Day == "Tuesday"] <- "Admin"
sched$What[sched$Time < 12 & sched$Day %in% c("Thursday")] <- "Writing"
sched$What[sched$Time >= 15 & sched$Day %in% c("Monday", "Wednesday", "Friday")] <- "Writing"
sched$What[sched$Time >= 15 & sched$Day %in% c("Tuesday", "Thursday")] <- "Meetings"
sched$Y <- Y[as.character(sched$Time)]
ggplot(sched, aes(x = Day, y = Y, fill = What)) + geom_tile() + theme_bw() +
scale_y_continuous("Time", breaks = Y + .5, labels = Time) + scale_fill_brewer(type = "qual") +
theme(legend.position = "bottom")
pkgdown:::build_site_external()
pkgdown:::build_site_external()
pkgdown:::build_site_external()
?knitr::include_graphics
pkgdown:::build_site_external()
knitr::include_graphics("./logo.png")
pkgdown:::build_site_external()
template_navbar()
pkgdown:::build_site_external()
pkgdown:::build_site_external()
install.packages("gh")
40 * 4 + 24 * 4 + 12 * 9
gh("/sachsmc")
library(gh)
?gh
gh("users/sachsmc/repos")
gh_whoami()
?gh_whoami
repos <- gh("users/sachsmc/repos", .token = "aa92055678b1b6e716c7a1b431c298250e03d268")
knitr::opts_chunk$set(echo = TRUE)
library(gh)
library(icon)
repos <- gh("users/sachsmc/repos", .token = "aa92055678b1b6e716c7a1b431c298250e03d268")
?gh
GITHUB_PAT
GITHUB_PAT = aa92055678b1b6e716c7a1b431c298250e03d268
gh("/user", .token = "aa92055678b1b6e716c7a1b431c298250e03d268")
repos <- gh("/users/sachsmc/repos", .token = "aa92055678b1b6e716c7a1b431c298250e03d268")
repos
library(jsonlite)
?jsonlite
fromJSON(repos)
flatten(repos)
toJSON(repos)
test <- fromJSON(toJSON(repos))
test
myreps <- subset(test, fork == FALSE & private == FALSE)[, c("name", "description", "html_url",
"stargazers_count", "watchers_count", "language", "has_pages",
"updated_at")]
myreps
repos <- gh("/users/sachsmc/repos", .token = "aa92055678b1b6e716c7a1b431c298250e03d268", .limit = 65)
test <- fromJSON(toJSON(repos))
myreps <- subset(test, fork == FALSE & private == FALSE)[, c("name", "description", "html_url",
"stargazers_count", "watchers_count", "language", "has_pages",
"updated_at")]
myreps
library(htmltools)
?tag
tags$li()
tags$li(class = "repo")
row <- 1
tags$li(class = "repo",
div(
a(class = "reponame", href = myreps$html_url[row], myreps$names[row]),
h3(myreps$description[row])
))
tags$li(class = "repo",
div(
a(class = "reponame", href = myreps$html_url[row], myreps$name[row]),
h3(myreps$description[row])
))
tags$li(class = "repo",
div(
a(class = "reponame", href = myreps$html_url[row], myreps$name[row]),
h3(myreps$language[row]),
p(myreps$description[row]),
p(class = "stargazers", paste(myreps$stargazers_count[row], "stars")),
p(class = "forks", paste(myreps$watchers_count[row], "forks"))
))
tags$li(class = "repo",
div(
a(class = "reponame", href = myreps$html_url[row], myreps$name[row]),
h3(myreps$language[row]),
p(myreps$description[row]),
p(class = "stargazers", paste(myreps$stargazers_count[row], "stars")),
p(class = "forks", paste(myreps$watchers_count[row], "forks")),
a(href = ifelse(myreps$has_pages[row] == TRUE, paste0("https://sachsmc.github.io", myreps$name[row]),
myreps$html_url[row]), "Project homepage")
))
makecard <- function(row) {
tags$li(class = "repo",
div(
a(class = "reponame", href = myreps$html_url[row], myreps$name[row]),
h3(myreps$language[row]),
p(myreps$description[row]),
p(class = "stargazers", paste(myreps$stargazers_count[row], "stars")),
p(class = "forks", paste(myreps$watchers_count[row], "forks")),
a(href = ifelse(myreps$has_pages[row] == TRUE, paste0("https://sachsmc.github.io/", myreps$name[row]),
myreps$html_url[row]), "Project homepage")
))
}
listrp <- lapply(1:nrow(myreps), makecard)
tags$ol(
listrp
)
newr <- myreps[order(myreps$updated_at, decreasing = TRUE), ]
myreps$updated_at
myreps
myreps <- flatten(subset(test, fork == FALSE & private == FALSE)[, c("name", "description", "html_url",
"stargazers_count", "watchers_count", "language", "has_pages",
"updated_at")])
lapply(myreps, c)
lapply(myreps, unlist)
as.data.frame(lapply(myreps, unlist))
as.Date.POSIXct(unlist(myreps$updated_at))
unlist(myreps$updated_at)
?as.Date
as.Date(unlist(myreps$updated_at))
myreps[order(as.Date(unlist(myreps$updated_at)), decreasing = TRUE), ]
myreps[order(unlist(myreps$stargazers_count), decreasing = TRUE), ][1:10, ]
subset(myreps, language == "R")
popl <- myreps[order(unlist(myreps$stargazers_count), decreasing = TRUE), ][1:10, ]
popl
makecard <- function(row, set) {
tags$li(class = "repo",
div(
a(class = "reponame", href = set$html_url[row], set$name[row]),
h3(set$language[row]),
p(set$description[row]),
p(class = "stargazers", paste(set$stargazers_count[row], "stars")),
p(class = "forks", paste(set$watchers_count[row], "forks")),
a(href = ifelse(set$has_pages[row] == TRUE, paste0("https://sachsmc.github.io/", set$name[row]),
set$html_url[row]), "Project homepage")
))
}
newr <- myreps[order(as.Date(unlist(myreps$updated_at)), decreasing = TRUE), ][1:10, ]
listrp <- lapply(1:nrow(newr), makecard, newr)
tags$ol(
listrp
)
set$stargazers_count[row]
myreps
sys.Date()
Sys.Date()
pkgdown:::build_site_external()
pkgdown:::build_site_external()
pkgdown:::build_site_external()
pkgdown:::build_site_external()
build_site()
pkgdown::build_site()
pkgdown::build_site()
?knitr::include_graphics
pkgdown::template_articles()
?starts_with
?pkgdown::starts_with
library(pkgdown)
?starts_with
starts_with
pkgdown:::starts_with
??starts_with
build_site(document=FALSE)
template_navbar()
build_home()
build_home()
build_home()
build_site()
build_home()
build_home()
build_home()
refs <- readr::read_csv("SachsItems.csv")
colnames(refs) <- make.names(colnames(refs))
refs <- refs[order(refs$Publication.Year, decreasing = TRUE),]
refs
?tapply
tapply(refs, refs$Manual.Tags, FUN= function(x) 1:nrow(x))
tapply(1:nrow(refs), refs$Manual.Tags, FUN= function(x) 1:length(x))
library(dplyr)
refs %>% group_by(Manual.Tags) %>% transmute(fNum = 1:nrow(.))
?group_by
refs %>% group_by(Manual.Tags) %>% transmute(fNum = 1:n())
?transmute
refs %>% group_by(Manual.Tags) %>% mutate(fNum = 1:n())
refs <- refs %>% group_by(Manual.Tags) %>% mutate(fNum = 1:n())
constr_comment <- function(row){
ii <- refs[row, ]
res <- c(sprintf("#' %s (%s) \\emph{%s}", ii$Title, ii$Publication.Year, ii$Publication.Title),
"#' ",
sprintf("#' %s", ii$Author),
"#' ",
sprintf("#' %s (%s). %s:%s. \\url{%s}", ii$Publication.Title, ii$Publication.Year,
ii$Pages, ii$Volume, ii$Url),
sprintf("#' @name %s", paste0(gsub(" ", "-", ii$Manual.Tags), "-", ii$fNum, '\n')),
"NULL \n")
res
}
twri <- NULL
for(i in 1:nrow(refs)) {
twri <- c(twri, constr_comment(i))
}
twri
options(encoding = "UTF-8")
cat(twri, file = "R/Publications.R", sep = "\n")
library(rmarkdown)
?rmarkdown::yaml_front_matter
list.dirs()
setwd("C:/Users/micsac/Box Sync/R projects/sachsmc.github.io/sachsmc")
setwd("C:/Users/micsac/Box Sync/R projects/sachsmc.github.io/sachsmc/vignettes")
list.dirs("talks")
?list.dirs
list.dirs("./talks", recursive = FALSE)
tkfold <- list.dirs("./talks", recursive = FALSE, full.names = FALSE)
tkfold
dir <- tkfold[1]
file.path(dir, "index.Rmd")
linkrmd <- file.path(dir, "index.Rmd")
yaml_front_matter(linkrmd)
linkrmd <- file.path("talks", dir, "index.Rmd")
yaml_front_matter(linkrmd)
knitr::opts_chunk$set(echo = FALSE)
library(rmarkdown)
library(htmltools)
tkfold <- list.dirs("./talks", recursive = FALSE, full.names = FALSE)
process_talk <- function(dir) {
linkrmd <- file.path("talks", dir, "index.Rmd")
titles <- yaml_front_matter(linkrmd)
tags$li(class = "repo",
div(
h3(a(class = "reponame", href = gsub(".Rmd", ".html", linkrmd, fixed = TRUE), titles$title)),
p(titles$date),
p(titles$author)
))
}
listrp <- lapply(tkfold, process_talk)
rmarkdown::render("talks/emulate-predict/index.Rmd")
?xaringan
?xaringan::moon_reader
rmarkdown::render("talks/emulate-predict/index.Rmd", "xaringan::moon_reader")
options(encoding = "UTF-8")
rmarkdown::render("talks/emulate-predict/index.Rmd", "xaringan::moon_reader")
rmarkdown::render("talks/emulate-predict/index.Rmd", "xaringan::moon_reader")
rmarkdown::render("talks/emulate-predict/index.Rmd", "xaringan::moon_reader")
rmarkdown::render("talks/emulate-predict/index.Rmd", "xaringan::moon_reader")
install.packages("gapminder")
remotes::install_github("sachsmc/gginteractive")
remotes::install_github("sachsmc/gginteractive")
knitr::opts_chunk$set(echo = FALSE)
library(rmarkdown)
library(htmltools)
tkfold <- list.dirs("./talks", recursive = FALSE, full.names = FALSE)
process_talk <- function(dir) {
linkrmd <- file.path("talks", dir, "index.Rmd")
titles <- yaml_front_matter(linkrmd)
tags$li(class = "repo",
div(
h3(a(class = "reponame", href = gsub(".Rmd", ".html", linkrmd, fixed = TRUE), titles$title)),
p(titles$date),
p(titles$author)
))
}
listrp <- lapply(tkfold, process_talk)
tags$ol(
listrp
)
setwd("C:/Users/micsac/Box Sync/R projects/sachsmc.github.io/sachsmc")
pkgdown::build_site()
install.packages("gganimate")
pkgdown::build_site()
pkgdown::build_site()
setwd("C:/Users/micsac/Box Sync/R projects/sachsmc.github.io/sachsmc")
setwd("C:/Users/micsac/Box Sync/R projects/sachsmc.github.io/sachsmc/vignettes")
knitr::opts_chunk$set(echo = FALSE)
library(rmarkdown)
library(htmltools)
tkfold <- list.dirs("../talks", recursive = FALSE, full.names = FALSE)
process_talk <- function(dir) {
linkrmd <- file.path("talks", dir, "index.Rmd")
titles <- yaml_front_matter(linkrmd)
tags$li(class = "repo",
div(
h3(a(class = "reponame", href = gsub(".Rmd", ".html", linkrmd, fixed = TRUE), titles$title)),
p(titles$date),
p(titles$author)
))
}
tkfold
knitr::opts_chunk$set(echo = FALSE)
library(rmarkdown)
library(htmltools)
tkfold <- list.dirs("../talks", recursive = FALSE, full.names = FALSE)
process_talk <- function(dir) {
linkrmd <- file.path("../talks", dir, "index.Rmd")
titles <- yaml_front_matter(linkrmd)
tags$li(class = "repo",
div(
h3(a(class = "reponame", href = gsub(".Rmd", ".html", linkrmd, fixed = TRUE), titles$title)),
p(titles$date),
p(titles$author)
))
}
listrp <- lapply(tkfold, process_talk)
tags$ol(
listrp
)
pkgdown::build_site()
setwd("C:/Users/micsac/Box Sync/R projects/sachsmc.github.io/sachsmc/pkgdown")
pkgdown::build_site()
setwd("C:/Users/micsac/Box Sync/R projects/sachsmc.github.io/sachsmc")
pkgdown::build_site()
repos <- gh("/users/sachsmc/repos", .token = "aa92055678b1b6e716c7a1b431c298250e03d268", .limit = 65)
test <- fromJSON(toJSON(repos))
knitr::opts_chunk$set(echo = FALSE)
library(gh)
library(jsonlite)
library(icon)
library(htmltools)
repos <- gh("/users/sachsmc/repos", .token = "aa92055678b1b6e716c7a1b431c298250e03d268", .limit = 65)
test <- fromJSON(toJSON(repos))
test
myreps <- subset(test, fork == FALSE & private == FALSE)[, c("name", "description", "html_url",
"stargazers_count", "watchers_count", "language", "has_pages",
"updated_at", "pushed_at")]
myreps[order(as.Date(unlist(myreps$updated_at)), decreasing = TRUE), ][1:10, ]
myreps[order(as.Date(unlist(myreps$pushed_at)), decreasing = TRUE), ][1:10, ]
library(ggplot2)
Time <- seq(8, 17, by = 1)
Y <- -Time + 17
names(Y) <- Time
Day <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
sched <- expand.grid(Time, Day)
colnames(sched) <- c("Time", "Day")
sched$What <- ""
sched$What[sched$Time == 12] <- "Lunch"
sched$What[sched$Time < 12 & !sched$Day %in% c("Tuesday", "Thursday")] <- "Coding"
sched$What[sched$Time %in% c(13, 14)] <- "Teaching prep"
sched$What[sched$Time %in% 8:9 & sched$Day == "Tuesday"] <- "Meetings"
sched$What[sched$Time %in% 10:11 & sched$Day == "Tuesday"] <- "Admin"
sched$What[sched$Time < 12 & sched$Day %in% c("Thursday")] <- "Meetings"
sched$What[sched$Time >= 15 & sched$Day %in% c("Monday", "Wednesday", "Thursday", "Friday")] <- "Writing"
sched$What[sched$Time >= 15 & sched$Day %in% c("Tuesday")] <- "Meetings"
sched$Y <- Y[as.character(sched$Time)]
ggplot(sched, aes(x = Day, y = Y, fill = What)) + geom_tile() + theme_bw() +
scale_y_continuous("Time", breaks = Y + .5, labels = Time) + scale_fill_brewer(type = "qual") +
theme(legend.position = "bottom")
Time <- seq(8, 17, by = 1)
Y <- -Time + 17
names(Y) <- Time
Day <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
sched <- expand.grid(Time, Day)
colnames(sched) <- c("Time", "Day")
sched$What <- ""
sched$What[sched$Time == 12] <- "Lunch"
sched$What[sched$Time < 12 & !sched$Day %in% c("Tuesday", "Thursday")] <- "Coding"
sched$What[sched$Time %in% c(13, 14)] <- "Teaching prep"
sched$What[sched$Time %in% 8:9 & sched$Day == "Tuesday"] <- "Meetings"
sched$What[sched$Time %in% 10:11 & sched$Day == "Tuesday"] <- "Admin"
sched$What[sched$Time < 12 & sched$Day %in% c("Wednesday")] <- "Meetings"
sched$What[sched$Time >= 15 & sched$Day %in% c("Monday", "Wednesday", "Thursday", "Friday")] <- "Writing"
sched$What[sched$Time >= 15 & sched$Day %in% c("Tuesday")] <- "Meetings"
sched$Y <- Y[as.character(sched$Time)]
ggplot(sched, aes(x = Day, y = Y, fill = What)) + geom_tile() + theme_bw() +
scale_y_continuous("Time", breaks = Y + .5, labels = Time) + scale_fill_brewer(type = "qual") +
theme(legend.position = "bottom")
Time <- seq(8, 17, by = 1)
Y <- -Time + 17
names(Y) <- Time
Day <- c("Monday", "Tuesday", "Wednesday", "Thursday", "Friday")
sched <- expand.grid(Time, Day)
colnames(sched) <- c("Time", "Day")
sched$What <- ""
sched$What[sched$Time == 12] <- "Lunch"
sched$What[sched$Time < 12 & !sched$Day %in% c("Tuesday")] <- "Coding"
sched$What[sched$Time %in% c(13, 14)] <- "Teaching prep"
sched$What[sched$Time %in% 8:9 & sched$Day == "Tuesday"] <- "Meetings"
sched$What[sched$Time %in% 10:11 & sched$Day == "Tuesday"] <- "Admin"
sched$What[sched$Time < 12 & sched$Day %in% c("Wednesday")] <- "Meetings"
sched$What[sched$Time >= 15 & sched$Day %in% c("Monday", "Wednesday", "Thursday", "Friday")] <- "Writing"
sched$What[sched$Time >= 15 & sched$Day %in% c("Tuesday")] <- "Meetings"
sched$Y <- Y[as.character(sched$Time)]
ggplot(sched, aes(x = Day, y = Y, fill = What)) + geom_tile() + theme_bw() +
scale_y_continuous("Time", breaks = Y + .5, labels = Time) + scale_fill_brewer(type = "qual") +
theme(legend.position = "bottom")
pkgdown::build_site()
pkgdown::build_site()
