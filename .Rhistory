summary(glm(Y ~ S * Z, family = quasibinomial(link = "cloglog"),
data = gen.data(100000)))
gen.data <- function(n) {
S <- rnorm(n)
Z <- rbinom(n, 1, .5)
Tout <- exp(log(-log(runif(n))) + (S * Z))
cens <- rbinom(n, 1, .2)
data.frame(Y = Tout < 10 & cens != 1, Tout, cens, S, Z)
}
summary(glm(Y ~ S * Z, family = quasibinomial(link = "cloglog"),
data = gen.data(100000)))
S <- rnorm(n)
Z <- rbinom(n, 1, .5)
Tout <- exp(log(-log(runif(n))) + (S * Z))
cens <- rbinom(n, 1, .2)
hist(Tout)
expit <- function(x) exp(x) / (1 + exp(x))
gen.data <- function(n) {
S <- rnorm(n)
Z <- rbinom(n, 1, .5)
Tout <- exp(log(-log(runif(n))) + (S * Z))
cens <- rbinom(n, 1, .2)
data.frame(Y = Tout < 5 & cens != 1, Tout, cens, S, Z)
}
summary(glm(Y ~ S * Z, family = quasibinomial(link = "cloglog"),
data = gen.data(100000)))
summary(glm(Tout < 5 ~ S * Z, family = quasibinomial(link = "cloglog"),
data = gen.data(100000)))
summary(glm(Tout < 5 ~ S * Z, family = quasibinomial(link = "cloglog"),
data = gen.data(100000)))
exp(-exp(5))
log(.7)
log(exp(-.7))
gen.data <- function(n) {
S <- rnorm(n)
Z <- rbinom(n, 1, .5)
Tout <- exp(log(-log(1 - runif(n))) + (S * Z))
cens <- rbinom(n, 1, .2)
data.frame(Y = Tout < 5 & cens != 1, Tout, cens, S, Z)
}
summary(glm(Tout < 5 ~ S * Z, family = quasibinomial(link = "cloglog"),
data = gen.data(100000)))
summary(glm(Tout < 5 ~ S * Z, family = quasibinomial(link = "cloglog"),
data = gen.data(100000)))
exp(-exp(1.5))
gen.data <- function(n) {
S <- rnorm(n)
Z <- rbinom(n, 1, .5)
Tout <- exp(log(-log(1 - runif(n))) - log(-log(.2)) + (S * Z))
cens <- rbinom(n, 1, .2)
data.frame(Y = Tout < 5 & cens != 1, Tout, cens, S, Z)
}
testdata <- gen.data(100000)
hist(testdata$Tout
)
summary(glm(Tout < 5 ~ S * Z, family = quasibinomial(link = "cloglog"),
data = testdata))
exp(-exp(2))
log(-log(.2))
summary(testdata$Tout < 5)
exp(exp(-5))
pexp(5)
pexp(5, rate = 2)
pexp(5, rate = 1/2)
pexp(5, rate = 1)
exp(-exp(1.5))
cloglog(pexp(5, rate = 1))
log(-log(pexp(5)))
log(-log(1-pexp(5)))
curve(pbeta(x, 1, 1))
curve(pbeta(x, 1, .5))
curve(pbeta(x, 1, 5))
gen.data <- function(n) {
S <- rnorm(n)
Z <- rbinom(n, 1, .5)
uu <- rbeta(n, 1, 5)
Tout <- exp(log(-log(1 - uu)) + (S * Z))
cens <- rbinom(n, 1, .2)
data.frame(Y = Tout < 5 & cens != 1, Tout, cens, S, Z)
}
testdata <- gen.data(100000)
hist(testdata$Tout)
summary(glm(Tout < 5 ~ S * Z, family = quasibinomial(link = "cloglog"),
data = testdata))
S <- rnorm(n)
Z <- rbinom(n, 1, .5)
uu <- rbeta(n, 1, 5)
Tout <- exp(log(-log(1 - uu)) + 2 + (S * Z))
cens <- rbinom(n, 1, .2)
hist(Tout)
expit <- function(x) exp(x) / (1 + exp(x))
gen.data <- function(n) {
S <- rnorm(n)
Z <- rbinom(n, 1, .5)
uu <- rbeta(n, 1, 5)
Tout <- exp(log(-log(1 - uu)) + 2 + (S * Z))
cens <- rbinom(n, 1, .2)
data.frame(Y = Tout < 5 & cens != 1, Tout, cens, S, Z)
}
testdata <- gen.data(100000)
hist(testdata$Tout)
summary(glm(Tout < 5 ~ S * Z, family = quasibinomial(link = "cloglog"),
data = testdata))
source('C:/Users/micsac/Box Sync/simulate-time-data.R')
gen.data <- function(n) {
S <- rnorm(n)
Z <- rbinom(n, 1, .5)
uu <- rbeta(n, .5, 2)
Tout <- exp(log(-log(1 - uu)) + 2 + (S * Z))
cens <- rbinom(n, 1, .2)
data.frame(Y = Tout < 5 & cens != 1, Tout, cens, S, Z)
}
testdata <- gen.data(100000)
hist(testdata$Tout)
summary(glm(Tout < 5 ~ S * Z, family = quasibinomial(link = "cloglog"),
data = testdata))
curve(pbeta(x, .5, 2))
curve(pbeta(x, 1, 5))
gen.data <- function(n) {
S <- rnorm(n)
Z <- rbinom(n, 1, .5)
uu <- rbeta(n, 1, 5)
Tout <- exp(log(-log(1 - uu)) + 2 + (S * Z))
cens <- rbinom(n, 1, .2)
data.frame(Y = Tout < 5 & cens != 1, Tout, cens, S, Z)
}
testdata <- gen.data(100000)
hist(testdata$Tout)
summary(glm(Tout < 5 ~ S * Z, family = quasibinomial(link = "cloglog"),
data = testdata))
library(survival)
coxph(Surv(Tout, 1 - cens) ~ S * Z, data = gen.data(10000))
gen.data <- function(n) {
S <- rnorm(n)
Z <- rbinom(n, 1, .5)
uu <- rbeta(n, 1, 5)
Tout <- exp(log(-log(1 - uu)) + 2 + .5 * (S * Z))
cens <- rbinom(n, 1, .2)
data.frame(Y = Tout < 5 & cens != 1, Tout, cens, S, Z)
}
testdata <- gen.data(100000)
hist(testdata$Tout)
summary(glm(Tout < 5 ~ S * Z, family = quasibinomial(link = "cloglog"),
data = testdata))
binder.f1 <- function(t, p = .5) {
sapply(t, function(tt) integrate(function(x) p * exp(-x) / (1 - p * (1 - exp(-x))), 0, tt)$value)
}
curve(binder.f1(x), 0, 5)
binder.f1 <- function(t, p = .5) {
1 - exp(sapply(t, function(tt) integrate(function(x) p * exp(-x) / (1 - p * (1 - exp(-x))), 0, tt)$value))
}
curve(binder.f1(x), 0, 5)
binder.f1 <- function(t, p = .5) {
1 - exp(-sapply(t, function(tt) integrate(function(x) p * exp(-x) / (1 - p * (1 - exp(-x))), 0, tt)$value))
}
curve(binder.f1(x), 0, 5)
binder.f1.int <- function(t, p = .5) {
1 - exp(log(1 - p * (1 - exp(-t)))))
}
curve(binder.f1(x), 0, 5)
curve(binder.f1.int(x), add = TRUE)
binder.f1.int <- function(t, p = .5) {
1 - exp(log(1 - p * (1 - exp(-t))))
}
curve(binder.f1(x), 0, 5)
curve(binder.f1.int(x), add = TRUE)
binder.f1.int <- function(t, p = .5) {
1 - exp(log(1 - p * (1 - exp(-t))))
}
curve(binder.f1(x), 0, 5)
curve(binder.f1.int(x), add = TRUE, col = "red")
binder.f1.inverse <- function(u, p = .5) {
-log(1 - u / p)
}
hist(binder.f1.inverse(runif(200, 0, .5)))
samp.f1 <- binder.f1.inverse(runif(200, 0, .5))
ecdf(samp.f1)
plot(ecdf(samp.f1))
curve(binder.f1.int(x), add = TRUE)
binder.f1.int <- function(t, p = .5, z) {
1 - exp(z * log(1 - p * (1 - exp(-t))))
}
curve(binder.f1(x,z = 1), 0, 5)
binder.f1.int <- function(t, p = .5, z) {
1 - exp(z * log(1 - p * (1 - exp(-t))))
}
curve(binder.f1(x,z = 1), 0, 5)
curve(binder.f1.int(x, z = 2), add = TRUE)
curve(binder.f1(x,z = 1), 0, 5)
curve(binder.f1.int(x,z = 1), 0, 5)
curve(binder.f1.int(x, z = 2), add = TRUE)
curve(binder.f1.int(x,z = 2), 0, 5)
curve(binder.f1.int(x, z = 1), add = TRUE)
binder.f1.int <- function(t, p = .5, z) {
1 - exp(z + log(1 - p * (1 - exp(-t))))
}
curve(binder.f1.int(x, z = 2), 0, 5)
curve(binder.f1.int(x, z = 1), add = TRUE)
binder.f1.int <- function(t, p = .5, z) {
1 - exp(log(z - p * (1 - exp(-t))))
}
curve(binder.f1.int(x, z = 2), 0, 5)
curve(binder.f1.int(x, z = 1), add = TRUE)
n = 399
Z <- rbinom(n, 1, .5)
TT <- -log(1 - runif(n)) / (1 + exp(-b.z * Z))
b.z = 1
Z <- rbinom(n, 1, .5)
TT <- -log(1 - runif(n)) / (1 + exp(-b.z * Z))
hist(TT)
cause <- rbinom(n, 1, p = exp(-b.z * Z) / (exp(-b.z * Z) + 1))
table(cause)
Z <- rbinom(n, 1, .5)
TT <- -log(1 - runif(n)) / (1 + exp(-b.z * Z))
cause <- rbinom(n, 1, p = exp(-b.z * Z) / (exp(-b.z * Z) + 1))
cens <- runif(n, 0, max(TT))
cause[cens < TT] <- 0
table(cause)
Z <- rbinom(n, 1, .5)
TT <- -log(1 - runif(n)) / (1 + exp(-b.z * Z))
cause <- rbinom(n, 1, p = exp(-b.z * Z) / (exp(-b.z * Z) + 1))
cens <- 2 - runif(n, 0, max(TT))
cause[cens < TT] <- 0
table(cause)
Z <- rbinom(n, 1, .5)
TT <- -log(1 - runif(n)) / (1 + exp(-b.z * Z))
cause <- 2 - rbinom(n, 1, p = exp(-b.z * Z) / (exp(-b.z * Z) + 1))
cens <- runif(n, 0, max(TT))
cause[cens < TT] <- 0
table(cuase)
table(cause)
sim.T <- function(n = 399, b.z = 1) {
Z <- rbinom(n, 1, .5)
TT <- -log(1 - runif(n)) / (1 + exp(-b.z * Z))
cause <- 2 - rbinom(n, 1, p = exp(-b.z * Z) / (exp(-b.z * Z) + 1))
cens <- runif(n, 0, max(TT))
cause[cens < TT] <- 0
data.frame(TT, cause, Z)
}
library(pseudo)
sim.T <- function(n = 399, b.z = 1) {
Z <- rbinom(n, 1, .5)
TT <- -log(1 - runif(n)) / (1 + exp(-b.z * Z))
cause <- 2 - rbinom(n, 1, p = exp(-b.z * Z) / (exp(-b.z * Z) + 1))
cens <- runif(n, 0, max(TT))
cause[cens < TT] <- 0
data.frame(TT, cause, Z)
}
library(pseudo)
hest <- sim.T(500)
puuo <- pseudoci(hest$TT, hest$cause, tmax = 2)
head(puuo$pseudo$cause1)
hest$pseudo <- puuo$pseudo$cause1[, 1]
glm(pseudo ~ Z, data = hest, family = gaussian(link = "log"))
glm(pseudo ~ Z, data = hest, family = gaussian(link = "log"), start=c(1, 1))
exp(-.65)
glm(pseudo ~ Z - 1, data = hest, family = gaussian(link = "log"), start=c(1, 1))
glm(pseudo ~ Z - 1, data = hest, family = gaussian(link = "log"), start=c(exp(1))
glm(pseudo ~ Z - 1, data = hest, family = gaussian(link = "log"), start=c(exp(1)))
glm(pseudo ~ Z - 1, data = hest, family = gaussian(link = "log"), start=c(exp(1)))
exp(-1.3)
cuminc <- function(alpha, beta, gamma) {
function(t, Z) (exp(alpha + beta * Z) + exp(gamma)) * (1 - exp(-t * (exp(alpha + beta * Z) + exp(gamma))))
}
curve(cuminc(0, 1, 0)(x, 0), 0, 5)
curve(cuminc(0, 1, 0)(x, 1), 0, 5)
curve(cuminc(0, 1, 0)(x, 0), 0, 5)
curve(cuminc(0, 1, 0)(x, 1), 0, 5, add = TRUE)
curve(cuminc(0.5, 1, -1)(x, 0), 0, 5)
curve(cuminc(0.5, 1, -1)(x, 1), 0, 5, add = TRUE)
curve(cuminc(0.5, .1, -1)(x, 0), 0, 5)
curve(cuminc(0.5, .1, -1)(x, 1), 0, 5, add = TRUE)
exp(4) * exp(5)
exp(4 * 5)
exp(4 + 5)
cuminc <- function(alpha, beta, gamma) {
function(t, Z) exp(alpha + beta * Z) + exp(gamma) * exp(alpha + beta * Z) * (1 - exp(-t * exp(alpha + beta * Z) + exp(gamma)))
}
curve(cuminc(0.5, .1, -1)(x, 0), 0, 5)
curve(cuminc(0.5, .1, -1)(x, 1), 0, 5, add = TRUE)
curve(cuminc(0.5, .1, -1)(x, 0), 0, 5)
curve(cuminc(0.5, .1, -1)(x, 1), 0, 5, add = TRUE)
cuminc <- function(alpha, beta, gamma) {
function(t, Z) exp(alpha + beta * Z) / (exp(alpha + beta * Z) + exp(gamma)) * (1 - exp(-t * exp(alpha + beta * Z) + exp(gamma)))
}
curve(cuminc(0.5, .1, -1)(x, 0), 0, 5)
curve(cuminc(0.5, .1, -1)(x, 1), 0, 5, add = TRUE)
sim.T <- function(n = 399, b.z = 1) {
Z <- rbinom(n, 1, .5)
TT <- -log(1 - runif(n)) / (1 + exp(b.z * Z))
cause <- 2 - rbinom(n, 1, p = exp(b.z * Z) / (exp(b.z * Z) + 1))
cens <- runif(n, 0, max(TT))
cause[cens < TT] <- 0
data.frame(TT, cause, Z)
}
library(pseudo)
hest <- sim.T(500)
puuo <- pseudoci(hest$TT, hest$cause, tmax = 2)
hest$pseudo <- puuo$pseudo$cause1[, 1]
B<-0
Z<-rnorm(100,0,1)
Pout<-0.5
U<-runif(100,0,Pout)
big1out<-1-exp((log(1-U))/(exp(Z*B)))
-log(1 - (1 - exp(log(1 - U) / exp(Z * B))) / Pout)
Aout<-big1out/Pout
-log(1-Aout)
B<-0
Z<-rnorm(100,0,1)
Pout<-0.5
U<-runif(100,0,Pout)
big1out<-1-exp((log(1-U))/(exp(Z*B)))
-log(1 - (1 - exp(log(1 - U) / exp(Z * B))) / Pout)
Aout<-big1out/Pout
hist(-log(1-Aout))
B<-0
Z<-rnorm(100,0,1)
Pout<-0.5
U<-runif(100,0,Pout)
big1out<-1-exp((log(1-U))/(exp(Z*B)))
-log(1 - (1 - exp(log(1 - U) / exp(Z * B))) / Pout)
Aout<-big1out/Pout
-log(1-Aout)
B<-0.5
Z<-rnorm(100,0,1)
Pout<-0.5
U<-runif(100,0,Pout)
big1out<-1-exp((log(1-U))/(exp(Z*B)))
-log(1 - (1 - exp(log(1 - U) / exp(Z * B))) / Pout)
Aout<-big1out/Pout
-log(1-Aout)
exp(Z * B)
log(1 - U) / exp(Z * B))
log(1 - U) / exp(Z * B)
(1 - exp(log(1 - U) / exp(Z * B))) / Pout
(1 - exp(log(1 - U) / exp(Z * B)))
sim.T <- function(n = 399, b.z = 1) {
Z <- rbinom(n, 1, .5)
TT <- -log(1 - runif(n)) / (1 + exp(b.z * Z))
cause <- 2 - rbinom(n, 1, p = exp(b.z * Z) / (exp(b.z * Z) + 1))
cens <- runif(n, 0, max(TT))
cause[cens < TT] <- 0
data.frame(TT, cause, Z)
}
library(pseudo)
hest <- sim.T(500)
puuo <- pseudoci(hest$TT, hest$cause, tmax = 2)
hest$pseudo <- puuo$pseudo$cause1[, 1]
glm(pseudo ~ Z - 1, data = hest, family = gaussian(link = "log"), start=c(exp(1)))
exp(-.348)
sim.T <- function(n = 399, b.z = .1) {
Z <- rbinom(n, 1, .5)
TT <- -log(1 - runif(n)) / (1 + exp(b.z * Z))
cause <- 2 - rbinom(n, 1, p = exp(b.z * Z) / (exp(b.z * Z) + 1))
cens <- runif(n, 0, max(TT))
cause[cens < TT] <- 0
data.frame(TT, cause, Z)
}
library(pseudo)
hest <- sim.T(500)
puuo <- pseudoci(hest$TT, hest$cause, tmax = 2)
hest$pseudo <- puuo$pseudo$cause1[, 1]
glm(pseudo ~ Z - 1, data = hest, family = gaussian(link = "log"), start=c(exp(1)))
exp(-.7)
glm(pseudo ~ Z - 1, data = hest, family = quasibinomial(link = "cloglog"), start=c(exp(1)))
glm(pseudo ~ Z - 1, data = hest, family = gaussian(link = "identity"), start=c(exp(1)))
exp(.1)
exp(.1) / (1 + exp(.1))
glm(pseudo ~ Z, data = hest, family = gaussian(link = "identity"), start=c(exp(1)))
glm(pseudo ~ Z, data = hest, family = gaussian(link = "identity"))
glm(pseudo ~ Z, data = hest, family = gaussian(link = "identity"))
hest <- sim.T(5000)
puuo <- pseudoci(hest$TT, hest$cause, tmax = 2)
hest$pseudo <- puuo$pseudo$cause1[, 1]
glm(pseudo ~ Z, data = hest, family = gaussian(link = "identity"))
sim.T <- function(n = 399, b.z = .1) {
Z <- rbinom(n, 1, .5)
TT <- -log(1 - runif(n)) / (1 + exp(b.z * Z))
cause <- 2 - rbinom(n, 1, p = exp(b.z * Z) / (exp(b.z * Z) + 1))
cens <- runif(n, 0, max(TT))
cause[cens < TT] <- 0
data.frame(TT, cause, Z)
}
library(pseudo)
hest <- sim.T(5000)
puuo <- pseudoci(hest$TT, hest$cause, tmax = 2)
hest$pseudo <- puuo$pseudo$cause1[, 1]
glm(pseudo ~ Z -1, data = hest, family = gaussian(link = "identity"))
exp(.4)
exp(.5)
exp(.5) / (1 + exp(.5))
glm(pseudo ~ Z -1, data = hest, family = gaussian(link = "cloglog"))
glm(pseudo ~ Z -1, data = hest, family = gaussian(link = "cloglog"), start = 1)
exp(-3)
exp(-.3)
sim.T <- function(n = 399, b.z = .1) {
Z <- rbinom(n, 1, .5)
TT <- -log(1 - runif(n)) / (1 + exp(b.z * Z))
cause <- 2 - rbinom(n, 1, p = exp(b.z * Z) / (exp(b.z * Z) + 1))
cens <- runif(n, 0, max(TT))
cause[cens < TT] <- 0
data.frame(TT, cause, Z)
}
library(pseudo)
hest <- sim.T(5000)
puuo <- pseudoci(hest$TT, hest$cause, tmax = 2)
hest$pseudo <- puuo$pseudo$cause1[, 1]
glm(pseudo ~ Z, data = hest, family = gaussian(link = "cloglog"), start = 1)
glm(pseudo ~ Z, data = hest, family = gaussian(link = "cloglog"), start = c(0, 1))
exp(.07)
binder.f1.int2 <- function(t, p = .5, z) {
p * (1 - exp(-t))
}
curve(binder.f1.int(x, z = 2), 0, 5)
curve(binder.f1.int(x, z = 1), add = TRUE)
curve(binder.f1.int(x, z = 1), add = TRUE)
curve(binder.f1.int(x, z = 1), 0, 5)
curve(binder.f1.int2(x, z = 1),add = T)
curve(binder.f1.int2(x, z = 1),add = T, col = "red")
curve(binder.f1.int2(x) * exp(1),add = T, col = "red")
curve(binder.f1.int2(x) * exp(1),0, 5)
curve(binder.f1.int2(x) * exp(.1),add = T, col = "red")
expit <- function(x) exp(x) / (1 + exp(x))
p <- .7
Z <- 1
t <- seq(0, 5, by = .1)
exp(-t) * expit(Z) / (1 - p * expit(Z) * (1 - exp(-t)))
plot(exp(-t) * expit(Z) / (1 - p * expit(Z) * (1 - exp(-t))) ~ t)
p <- .7
Z <- 0
t <- seq(0, 5, by = .1)
lines(exp(-t) * expit(Z) / (1 - p * expit(Z) * (1 - exp(-t))) ~ t)
n
Z <- rbinom(n, 1, .5)
beta <- .4
TT <- 5
integrate(function(t) exp(-t) * L / (1 - p * L * (1 - exp(-t))) + exp(-t) / (1 - (1 - p) * (1 - exp(-t))), 0, TT)
Z <- rbinom(n, 1, .5)
beta <- .4
L <- expit(Z * beta)
integrate(function(t) exp(-t) * L / (1 - p * L * (1 - exp(-t))) + exp(-t) / (1 - (1 - p) * (1 - exp(-t))), 0, TT)
integrate(function(t) sapply(t) exp(-t) * L / (1 - p * L * (1 - exp(-t))) + exp(-t) / (1 - (1 - p) * (1 - exp(-t))), 0, TT)
integrate(function(x) sapply(x) exp(-t) * L / (1 - p * L * (1 - exp(-t))) + exp(-t) / (1 - (1 - p) * (1 - exp(-t))), 0, TT)
integrate(function(x){
sapply(x, function(t) exp(-t) * L / (1 - p * L * (1 - exp(-t))) + exp(-t) / (1 - (1 - p) * (1 - exp(-t))))
}, 0, TT)
t <- 5
exp(-t) * L / (1 - p * L * (1 - exp(-t)))
L <- .5
exp(-t) * L / (1 - p * L * (1 - exp(-t)))
integrate(function(x){
sapply(x, function(t) exp(-t) * L / (1 - p * L * (1 - exp(-t))) + exp(-t) / (1 - (1 - p) * (1 - exp(-t))))
}, 0, TT)
exp(-integrate(function(x){
sapply(x, function(t) exp(-t) * L / (1 - p * L * (1 - exp(-t))) + exp(-t) / (1 - (1 - p) * (1 - exp(-t))))
}, 0, TT)$value)
TT
p
p * (1 - exp(-TT)) * L
sapply(TTT, function(TT) exp(-integrate(function(x){
sapply(x, function(t) exp(-t) * L / (1 - p * L * (1 - exp(-t))) + exp(-t) / (1 - (1 - p) * (1 - exp(-t))))
}, 0, TT)$value))
TTT <- seq(0, 5)
sapply(TTT, function(TT) exp(-integrate(function(x){
sapply(x, function(t) exp(-t) * L / (1 - p * L * (1 - exp(-t))) + exp(-t) / (1 - (1 - p) * (1 - exp(-t))))
}, 0, TT)$value))
integrate(function(TTT) sapply(TTT, function(TT) exp(-integrate(function(x){
sapply(x, function(t) exp(-t) * L / (1 - p * L * (1 - exp(-t))) + exp(-t) / (1 - (1 - p) * (1 - exp(-t))))
}, 0, TT)$value) * exp(-TT) * L / (1 - p * L * (1 - exp(-TT)))), 0, 5)
TT
L
integrate(function(TTT) sapply(TTT, function(TT) exp(-integrate(function(x){
sapply(x, function(t) exp(-t) * L / (1 - p * L * (1 - exp(-t))) + exp(-t) / (1 - (1 - p) * (1 - exp(-t))))
}, 0, TT)$value) * exp(-TT) * L / (1 - p * L * (1 - exp(-TT)))), 0, 5)$value
p * (1 - exp(-TT)) * L
t
t <- seq(0, 5, by = .1)
-log(1 - p * (1 - exp(-t))) - log(1 - (1-p) * (1 - exp(-t)))
p
1 - p * (1 - exp(-t))
plot(1 - p * (1 - exp(-t)) ~ t)
(1 - p * (1 - exp(-t))) ^L
plot((1 - p * (1 - exp(-t))) ^L)
L
plot((1 - p * (1 - exp(-t))) ^(-1)
)
plot((1 - p * (1 - exp(-t))) ^L)
L
log(.5)
exp(1)
plot((1 - p * (1 - exp(-t))) ^2)
plot((1 - p * (1 - exp(-t))) ^3)
plot((1 - p * (1 - exp(-t))) ^-1)
plot((1 - p * (1 - exp(-t))) ^-.1)
plot((1 - p * (1 - exp(-t))) *3)
plot((1 - p * (1 - exp(-t))) ^3)
p
plot((1 - p * (1 - exp(-t))) ^1)
Z <- 1
(1 - (1 - p * (1 - exp(-t))))^exp(Z)
plot((1 - (1 - p * (1 - exp(-t))))^exp(Z) ~ t)
plot((1 - (1 - p * (1 - exp(-t))))^exp(Z) + (1 - (1 - (1 - p) * (1 - exp(-t)))) ~ t)
t <- seq(0, 100, by = 1)
plot((1 - (1 - p * (1 - exp(-t))))^exp(Z) + (1 - (1 - (1 - p) * (1 - exp(-t)))) ~ t)
p
plot((1 - (1 - p * (1 - exp(-t))))^exp(Z) ~ t)
t <- seq(0, 15)
Z <- 1
plot((1 - (1 - p * (1 - exp(-t))))^exp(Z) ~ t)
Z <- 0
plot((1 - (1 - p * (1 - exp(-t))))^exp(Z) ~ t)
setwd("C:/Users/micsac/Box Sync/R projects/sachsmc.github.io")
