Sys.Date()
library(rvest)
library(rvest)
google_scholar_url <- "https://scholar.google.com/citations?hl=en&user=txzZpf0AAAAJ&view_op=list_works&sortby=pubdate"
doc <- read_html(google_scholar_url)
doc
?rvest
doc |> html_elements("gs_a_tr")
doc |> html_elements(".gs_a_tr")
doc |> html_elements("tr")
doc |> html_elements(".gsc_a_tr")
google_scholar_url <- "https://scholar.google.com/citations?hl=en&user=txzZpf0AAAAJ&view_op=list_works&sortby=pubdate&pagesize=100&cstart=%s"
doc <- read_html(sprintf(google_scholar_url, "0"))
doc |> html_elements(".gsc_a_tr")
doc |> html_element(".gsc_a_tr")
publist <- doc |> html_elements(".gsc_a_tr")
publist[[1]]
node <- publist[[1]]
html_text(node)
html_element(node, ".gsc_a_t")
main <- html_element(node, ".gsc_a_t")
year <- html_element(node, ".gsc_a_y")
year
year <- html_element(node, ".gsc_a_y") |> html_text()
year
main  |> html_text()
main
main  |> html_element("a") |> html_text()
link <- main  |> html_element("a") |> html_element("href")
main  |> html_element("a")
main  |> html_element("a") |> html_element("href")
link <- main  |> html_element("a") |> html_attr("href")
link
link <- paste0("https://scholar.google.com", main  |> html_element("a") |> html_attr("href"))
link
main |> html_element(".gs_gray")
main |> html_element(".gs_gray") |> html_text2()
main |> html_text2()
main |> html_elements(".gs_gray") |> html_text2()
i <- 0
doc <- read_html(sprintf(google_scholar_url, as.character(i)))
publist <- doc |> html_elements(".gsc_a_tr")
publist
length(publist)
parse_element <- function(node) {
main <- html_element(node, ".gsc_a_t")
year <- html_element(node, ".gsc_a_y") |> html_text()
title <- main  |> html_element("a") |> html_text()
tmpcite <- main |> html_elements(".gs_gray") |> html_text2()
authors_short <- tmpcite[1]
reference <- tmpcite[2]
link <- paste0("https://scholar.google.com", main  |> html_element("a") |> html_attr("href"))
data.frame(title = title, authors = authors_short, reference = reference, link = link)
}
lapply(publist, parse_element)
cstarts <- c(0, 100, 200) ## i will never have more than 300 pubs
pubdf <- NULL
for(i in cstarts) {
doc <- read_html(sprintf(google_scholar_url, as.character(i)))
publist <- doc |> html_elements(".gsc_a_tr")
if(length(publist) == 0) break
pubdf <- c(pubdf, lapply(publist, parse_element))
}
pubdf
pubdf <- do.call(rbind, pubdf)
View(pubdf)
publist
publist |> html_text()
cstarts <- c(0, 100, 200) ## i will never have more than 300 pubs
pubdf <- NULL
for(i in cstarts) {
doc <- read_html(sprintf(google_scholar_url, as.character(i)))
publist <- doc |> html_elements(".gsc_a_tr")
if((publist |> html_text())[1] == "There are no articles in this profile.") break
pubdf <- c(pubdf, lapply(publist, parse_element))
}
pubdf <- do.call(rbind, pubdf)
pubdf
#| echo: false
library(htmltools)
em(pubdf$reference)
?rmarkdown::paged_table
#| echo: false
#| output: asis
pubdfout <- data.frame(Title = pubdf$title, Authors = pubdf$authors,
Journal = paste0("_",pubdf$reference, "_"),
Year = pubdf$year,
Link = paste0("<a href=",pubdf$link, " target = '_blank'>Google scholar link</a>"))
#| echo: true
#| code-fold: true
library(rvest)
parse_element <- function(node) {
main <- html_element(node, ".gsc_a_t")
year <- html_element(node, ".gsc_a_y") |> html_text()
title <- main  |> html_element("a") |> html_text()
tmpcite <- main |> html_elements(".gs_gray") |> html_text2()
authors_short <- tmpcite[1]
reference <- tmpcite[2]
link <- paste0("https://scholar.google.com", main  |> html_element("a") |> html_attr("href"))
data.frame(title = title, authors = authors_short, reference = reference, year = year, link = link)
}
google_scholar_url <- "https://scholar.google.com/citations?hl=en&user=txzZpf0AAAAJ&view_op=list_works&sortby=pubdate&pagesize=100&cstart=%s"
cstarts <- c(0, 100, 200) ## i will never have more than 300 pubs
pubdf <- NULL
for(i in cstarts) {
doc <- read_html(sprintf(google_scholar_url, as.character(i)))
publist <- doc |> html_elements(".gsc_a_tr")
if((publist |> html_text())[1] == "There are no articles in this profile.") break
pubdf <- c(pubdf, lapply(publist, parse_element))
}
pubdf <- do.call(rbind, pubdf)
#| echo: false
#| output: asis
pubdfout <- data.frame(Title = pubdf$title, Authors = pubdf$authors,
Journal = paste0("_",pubdf$reference, "_"),
Year = pubdf$year,
Link = paste0("<a href=",pubdf$link, " target = '_blank'>Google scholar link</a>"))
with(pubdfout, cat("- ", Title, ", ", Authors, ".  ", Journal, ", ", Year, ".  \n", Link, "\n"))
#| echo: false
#| output: asis
pubdfout <- data.frame(Title = pubdf$title, Authors = pubdf$authors,
Journal = paste0("_",pubdf$reference, "_"),
Year = pubdf$year,
Link = paste0("<a href=",pubdf$link, " target = '_blank'>Google scholar link</a>"))
for(i in 1:nrow(pubdfout)) {
with(pubdfout[i,], cat("- ", Title, ", ", Authors, ".  ", Journal, ", ", Year, ".  \n", Link, "\n"))
}
#| echo: false
#| output: asis
pubdfout <- data.frame(Title = pubdf$title, Authors = pubdf$authors,
Journal = paste0("_",pubdf$reference, "_"),
# Year = pubdf$year,
Link = paste0("<a href=",pubdf$link, " target = '_blank'>Google scholar link</a>"))
for(i in 1:nrow(pubdfout)) {
with(pubdfout[i,], cat(i, " ", Title, ", ", Authors, ".  ", Journal, ". \n", Link, "\n"))
}
library(survival)
?survdiff
survdiff(Surv(futime, fustat) ~ rx,data=ovarian)
survdiff(Surv(futime, fustat) ~ rx,data=ovarian) |> summary()
fit <- survfit(Surv(time, status) ~ ph.ecog, data=lung)
quantile(fit)
